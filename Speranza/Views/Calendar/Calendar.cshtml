@using Speranza.Models.Interfaces;
@using Speranza.Views
@using System.Globalization;
@using Speranza.Models;

@model Speranza.Models.CalendarModel
@{
    ViewBag.Title = "Calendar";
    Layout = "~/Views/Layout.cshtml";
}

<div class="container calendar-container">
    <div class="info-message">
        @Model.UserInfoMessage.Message
    </div>
    <div class="info-message">
        @if (!Model.AllowToSignUp)
        {
            @:Prihlásenie na tréning je možné z dôvodu neodhlásenia sa z predchádzajúceho tréningu až po kontaktovaní admina. Tel. číslo: +421917538077
       }
    </div>
    <h2>Rozpis tréningov</h2>

    @if (Model != null)
    {
        <p> @Html.Raw(ViewHelper.ShowMessageInView(Model.Message, Model.SignedUpOrSignedOffTraining))</p>
    }


    @{var weeks = new List<List<IDayModel>>();

        for (int i = 0; i < Model.Days.Count; i += 7)
        {
            weeks.Add(((List<IDayModel>)Model.Days).GetRange(i, Math.Min(7, Model.Days.Count - i)));
        }
    }

    <div id="calendarCarousel" class="carousel" data-ride="carousel" data-interval="false" data-wrap="false">
        <ol class="carousel-indicators">
            <li data-target="#calendarCarousel" data-slide-to="0" class="active"></li>
            @for (int i = 1; i < weeks.Count; i++)
            {
                <li data-target="#calendarCarousel" data-slide-to="@i"></li>
            }
        </ol>
        <div class="carousel-inner">
            @foreach (var week in weeks)
            {
                var active = "";
                if (week == weeks.First())
                {
                    active = "active";
                }
                <div class="carousel-item @active">
                    <div class="cd-schedule loading">
                        <div class="timeline">
                            <ul>
                                @for (int i = 6; i < 21; i++)
                                {
                                    <li><span>@i.ToString("00"):00</span></li>
                                }
                            </ul>
                        </div> <!-- .timeline -->

                        <div class="events">
                            <ul>
                                @foreach (var day in week)
                                {
                                    <li class="events-group">
                                        <div class="top-info">
                                            <span>@ViewHelper.TranslateDayNames(day.DayName) @day.Date</span>
                                        </div>

                                        <ul>
                                            @{
                                                Random random = new Random();
                                                foreach (var training in day.Trainings.OrderBy(r => r.Time))
                                                {
                                                    int index = random.Next(1, 5);
                                                    <li class="single-event" data-animation="false" data-trigger="hover" data-toggle="popover" title="@training.Trainer" data-content="@training.Description" data-start="@training.Time.ToString("HH:mm")" data-end="@training.Time.AddHours(1).ToString("HH:mm")" data-event="event-@index">
                                                        <em class="event-name">
                                                            @if (training.IsUserSignedUp)
                                                            {
                                                                <span class="octicon octicon-heart text-danger" style="font-size: 120%"></span>
                                                            }
                                                            else
                                                            {
                                                                <span class="octicon octicon-organization text-dark" style="font-size: 120%"></span>
                                                            }
                                                            @if (Session["IsAdmin"] != null && (bool)Session["IsAdmin"])
                                                            {
                                                                <span class="event-capacity trainingsDetails" style="cursor: pointer" data-training="@training.ID" style="font-size: 120%"><span id="@training.ID-rn">@training.RegisteredNumber</span>/@training.Capacity</span>
                                                                <span id="@training.ID-date" style="display: none;">@training.Time.ToString("dd.MM.yyyy")</span>
                                                                <span id="@training.ID-time" style="display: none;">@training.Time.ToString("HH:mm")</span>
                                                            }
                                                            else
                                                            {
                                                                <span class="event-capacity" style="font-size: 120%">@training.RegisteredNumber/@training.Capacity</span>
                                                            }
                                                        </em>
                                                        @if (training.IsUserSignedUp)
                                                        {
                                                            if (training.IsAllowedToSignOff)
                                                            {
                                                                <a href="SignOff?id=@training.ID" id="@training.ID">
                                                                    Odhlásiť
                                                                    <span class="octicon octicon-x text-dark" style="font-size: 120%"></span>
                                                                </a>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (training.RegisteredNumber < training.Capacity && training.IsAllowedToSignUp && Model.AllowToSignUp)
                                                            {
                                                                if (!training.IsAllowedToSignOff)
                                                                {
                                                                    <a href="SignUp?id=@training.ID" id="@training.ID" data-toggle="confirmation" data-btn-ok-label="Áno" data-btn-ok-class="btn btn-info" data-btn-cancel-class="btn btn-danger" data-btn-cancel-label="Nie" data-title="Prihlásenie" data-content="Z tohto tréningu už nie je možné sa odhlásiť. Si si istý, že sa chceš prihlásiť?">
                                                                        Prihlásiť
                                                                        <span class="octicon octicon-plus text-dark" style="font-size: 120%"></span>
                                                                    </a>
                                                                }
                                                                else
                                                                {
                                                                    <a href="SignUp?id=@training.ID" id="@training.ID">
                                                                        Prihlásiť
                                                                        <span class="octicon octicon-plus text-dark" style="font-size: 120%"></span>
                                                                    </a>
                                                                }
                                                            }
                                                        }
                                                    </li>
                                                }

                                            }
                                        </ul>
                                    </li>
                                                }

                                @{var newYear = false; }
                                @if (week.Count < 7)
                                {

                                    var lastDay = week.Last();
                                    int lastDayName = (int)lastDay.DayName;
                                    var lastDayDate = lastDay.Date;
                                    DayNames nextDay = (DayNames)lastDayName;
                                    string[] formats = { "dd.MM.", "d.MM.", "d.M.", "dd.M." };
                                    for (int i = week.Count + 1; i <= 7; i++)
                                    {
                                        <li class="events-group disabled">
                                            <div class="top-info">
                                                @{
                                                    if (lastDayName == 6)
                                                    {
                                                        lastDayName = -1;
                                                    }
                                                    nextDay = (DayNames)(++lastDayName);

                                                    DateTime nextDate = DateTime.MinValue;
                                                    if (DateTime.TryParseExact(lastDayDate, formats, CultureInfo.InvariantCulture, DateTimeStyles.None, out nextDate))
                                                    {
                                                        nextDate = nextDate.AddDays(1);
                                                        <span>@ViewHelper.TranslateDayNames(nextDay) @nextDate.ToString("dd.MM")</span>
                                                    }
                                                    else
                                                    {
                                                        <span>@ViewHelper.TranslateDayNames(nextDay)</span>
                                                    }
                                                    lastDayDate = nextDate.ToString("dd.MM.");
                                                }
                                            </div>

                                            <ul class=" disabled disabled-boxes">
                                                <li class="single-event">
                                            </ul>
                                        </li>
                                                        }
                                                    }
                            </ul>
                        </div>
                    </div>
                </div>
                                                    }
        </div>
        <a class="carousel-control-prev" href="#calendarCarousel" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="carousel-control-next" href="#calendarCarousel" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>
</div>
@Html.Partial("../AdminFutureTrainings/TrainingDetails")
@section scripts
{
    <script src="~/Scripts/bootstrap-confirmation.min.js"></script>

    <script>

        $(".events").on("click", ".trainingsDetails", function (event) {
            TrainingDetails($(this));
        });

        function TrainingDetails(element) {

            var trainingID = element.data('training');
            $.ajax({
                //controller method
                url: '@Url.Action("TrainingDetails", "AdminFutureTrainings")',
                //controller method parameter : trainingID
                data: { trainingID: trainingID },
                type: 'POST',
                dataType: "html",
                success: function (response) {
                    $('#TrainingDetailsBody').html(response);
                    $('#modalTitleTraining').html($('#' + trainingID + "-date").html() + " " + $('#' + trainingID + "-time").html());
                    $("#AddUser").data("training", trainingID);
                    $('#trainingDetailsModal').modal('show');

                }
            });
        }

        $("#TrainingDetailsBody").on("click", ".UserSignOutFromTraining", function (event) {
            SignOutFromTraining($(this));
        });

        function SignOutFromTraining(changedElement) {
            {
                var id = changedElement.data('email');
                var training = changedElement.data('training');
                var rn = $("#" + training + "-rn").html();
                $.ajax({
                    url: "../AdminUsers/SignOutFromTraining",
                    data: { id: id, training: training },
                    type: 'POST',
                    dataType: "json",
                    success: function (response) {
                        if (response.Message == 6) {
                            $("#" + training + "-rn").html(rn - 1);
                            $("#messageBoxAddUserWarning").hide();
                            $('#' + getEmailForJS(id)).remove();
                            $('#messageBoxAddUserSuccess').html("Užívateľ <b>" + response.Email + "</b> bol úspešne odhlásený z tréningu <b>" + response.TrainingDate + "</b> o: <b>" + response.TrainingTime + "</b>!");
                            $('#messageBoxAddUserSuccess').show();
                            $('#' + training + '-RegisteredNumber').html($('#' + training + '-RegisteredNumber').html() - 1);
                        }
                    }
                });

            }
        };

        $("#AddUserButton").click(function () {
            var trainingID = $("#AddUser").data("training");
            var user = $("#AddUser").val();
            var rn = parseInt($("#" + trainingID + "-rn").html());
            $.ajax({
                //controller method
                url: '@Url.Action("AddUserToTraining", "AdminFutureTrainings")',
                //controller method parameter : trainingID
                data: { trainingID: trainingID, userData: user },
                type: 'POST',
                dataType: "json",
                success: function (response) {
                    $("#AddUser").val("");
                    if (response == 4) {
                        showMessageBoxWarningForAddingUser(user + " už je prihlásený na tento tréning.");
                    }
                    else if (response == 6) {
                        showMessageBoxWarningForAddingUser("Daný používateľ neexistuje.");
                    }
                    else if (response == 1) {
                        showMessageBoxWarningForAddingUser("Tréning neexistuje.");
                    }
                    else if (response == 2) {
                        showMessageBoxWarningForAddingUser("Tréning má už naplnenú kapacitu.");
                    }
                    else {
                        $("#" + trainingID + "-rn").html(rn + 1);
                        showMessageBoxSuccessForAddingUser(response.Name + " " + response.Surname + " bol prihlásený na tento tréning.");
                        if ($('#UsersInTrainingTable').val() == undefined) {

                            var newTable = '<table class="table table-striped table-hover" id="UsersInTrainingTable">' +
                                            ' <thead>' +
                                            '  <tr class="d-flex">' +
                                            '<th class="col-2">Meno</th>' +
                                            '<th class="col-3">Priezvisko</th>' +
                                            '<th class="col-4">Stav permanentky</th>' +
                                            '<th class="col-3">Akcia</th>' +
                                       ' </tr>' +
                                        '</thead>' +
                             ' </table>';
                            $("#TrainingDetailsBody").html(newTable);
                        }
                        var d = new Date();
                        var day = (d.getDate() < 10 ? "0" : "") + d.getDate();
                        var hours = (d.getHours() < 10 ? "0" : "") + d.getHours();
                        var minutes = (d.getMinutes() < 10 ? "0" : "") + d.getMinutes();
                        var month = (d.getMonth() < 9 ? "0" : "") + (d.getMonth() + 1);
                        var seconds = (d.getSeconds() < 10 ? "0" : "") + (d.getSeconds());
                        var strDate = day + "." + month + "." + d.getFullYear() + " " + hours + ":" + minutes + ":" + seconds;

                        var newRow = '<tr class="d-flex" id="' + response.Email + '">' +
                                 '<td class="col-2">' + response.Name + '</td>' +
                                 '<td class="col-3">' + response.Surname + '</td>' +
                                 '<td class="col-4">' + response.NumberOfFreeSignUps + '</td>' +
                                 //'<td>' + response.Email + '</td>' +
                                //'<td>' + strDate + '</td>' +
                                 '<td class="col-3"><a class="UserSignOutFromTraining" data-email="' + response.Email + '" data-training="' + trainingID + '" href="#">Odhlás používateľa</a></td>' +
                                 '</tr>';

                        $('#UsersInTrainingTable').append(newRow);
                        $('#' + trainingID + '-RegisteredNumber').html(1 + parseInt($('#' + trainingID + '-RegisteredNumber').html(), 10));
                        if ($('#UsersInTrainingTable tr').length == 7) {
                            showMessageBoxWarningForAddingUser(response.Name + " " + response.Surname + " bol prihlásený na tento tréning." + "<br> Pozor je to 6. cvičiaci, potrebuješ ďalšieho trénera!");

                        }
                        else {
                            showMessageBoxSuccessForAddingUser(response.Name + " " + response.Surname + " bol prihlásený na tento tréning.");
                        }
                    }

                }
            })
        })

        $(function () {
            var people = [
                @if(Model.Users.Count > 0)
            {
            var value = "\"" + Model.Users[0].Name + " " + Model.Users[0].Surname +" ("+Model.Users[0].Email+")\"";
                    @Html.Raw(value);
            for (int i = 1; i< Model.Users.Count; i++)
            {
                value = ",\"" + Model.Users[i].Name + " " + Model.Users[i].Surname +" (" + Model.Users[i].Email + ")\"";
                 @Html.Raw(value);
            }
        }
            ];
            $("#AddUser").autocomplete({
                source: people
            });
        })

        function showMessageBoxSuccessForAddingUser(text) {
            $('#messageBoxAddUserWarning').hide();
            $("#messageBoxAddUserSuccess").html(text);
            $("#messageBoxAddUserSuccess").show();
        }

        function showMessageBoxWarningForAddingUser(text) {
            $('#messageBoxAddUserSuccess').hide();
            $("#messageBoxAddUserWarning").html(text);
            $("#messageBoxAddUserWarning").show();
        }

        var isshown = false;
        var clickedAway = false;

        $(function () {
            $('[data-toggle="popover"]').popover();
        });

        $('body').on('click', function (e) {
            {
                if (isshown && clickedAway) {
                    $('[data-toggle="popover"]').popover('hide');
                    isshown = false;
                    clickedAway = false;
                } else {
                    clickedAway = true;
                }
            }
        });

        $('body').on('shown.bs.popover', function () {
            isshown = true;
            clickedAway = false;
        });

        $('[data-toggle=confirmation]').confirmation({
            rootSelector: '[data-toggle=confirmation]',
            // other options
        });

        $("#TrainingDetailsBody").on("click", ".SignUpCount", function (event) {
                    var self = $(this);
                    var count = self.data("count");
                    var email = self.data("email");
                    $.ajax({
                        url: '@Url.Action("UpdateSignUpCount", "AdminUsers")',
                        data: { id: email, countUpdate: count },
                        type: 'POST',
                        dataType: "json",
                        success: function (response) {
                            var signUpCountColumn = $('#TrainingDetailsBody').find('#freeSignUpsCell-' + getEmailForJS(response.Email));
                            if (response.Message == 4)
                                $('#messageBoxAddUserSuccess').html("Počet vstupov užívateľovi <b>" + response.Email + "</b> bol zvýšený o <b>" + response.ChangeNumberOfSignUps + "</b>");
                            else if (response.Message == 5) {
                                var changedCount = response.ChangeNumberOfSignUps;
                                if (signUpCountColumn.text() < response.ChangeNumberOfSignUps) {
                                    changedCount = signUpCountColumn.text();
                                }
                                $('#messageBoxAddUserSuccess').html("Počet vstupov užívateľovi <b>" + response.Email + "</b> bol znížený o <b>" + changedCount + "</b>");

                            }

                            $('#messageBoxAddUserSuccess').show();
                            signUpCountColumn.html(response.AfterChangeNumberOfSignUps);
                        }
                    });

                });
    </script>

}