@using Speranza.Models.Interfaces;
@using Speranza.Views
@using System.Globalization;
@using Speranza.Models;

@model Speranza.Models.CalendarModel
@{
    ViewBag.Title = "Calendar";
    Layout = "~/Views/Layout.cshtml";
}

<div class="container calendar-container">
    <h2>Rozpis tréningov</h2>

    @if (Model != null)
    {
        <p> @Html.Raw(ViewHelper.ShowMessageInView(Model.Message, Model.SignedUpOrSignedOffTraining))</p>
    }

    @{var weeks = new List<List<IDayModel>>();

        for (int i = 0; i < Model.Days.Count; i += 7)
        {
            weeks.Add(((List<IDayModel>)Model.Days).GetRange(i, Math.Min(7, Model.Days.Count - i)));
        }
    }

    @foreach (var week in weeks)
    {
        <div class="cd-schedule loading">
            <div class="timeline">
                <ul>
                    @for (int i = 6; i < 21; i++)
                    {
                        <li><span>@i.ToString("00"):00</span></li>
                    }
                </ul>
            </div> <!-- .timeline -->

            <div class="events">
                <ul>
                    @foreach (var day in week)
                    {
                        <li class="events-group">
                            <div class="top-info">
                                <span>@ViewHelper.TranslateDayNames(day.DayName) @day.Date</span>
                            </div>

                            <ul>
                                @{
                                    Random random = new Random();
                                    foreach (var training in day.Trainings.OrderBy(r => r.Time))
                                    {
                                        int index = random.Next(1, 5);
                                        <li class="single-event" data-start="@training.Time.ToString("HH:mm")" data-end="@training.Time.AddHours(1).ToString("HH:mm")" data-event="event-@index">
                                            <em class="event-name">
                                                @training.Description
                                            </em>
                                            <span class="event-capacity">@training.RegisteredNumber/@training.Capacity</span>
                                            @if (training.IsUserSignedUp)
                                            {
                                                if (training.IsAllowedToSignOff)
                                                {
                                                    @Html.ActionLink("Odhlásiť", "SignOff", "Calendar", new { id = training.ID }, null);
                                                }
                                            }
                                            else
                                            {
                                                if (training.RegisteredNumber < training.Capacity && training.IsAllowedToSignUp && Model.AllowToSignUp)
                                                {
                                                    @Html.ActionLink("Prihlásiť", "SignUp", "Calendar", new { id = training.ID }, null);
                                                }
                                            }
                                        </li>
                                    }

                                }
                            </ul>
                        </li>
                                    }

                    @{var newYear = false;
                        }
                        @if (week.Count < 7)
                        {

                            var lastDay = week.Last();
                            int lastDayName = (int)lastDay.DayName;
                            var lastDayDate = lastDay.Date;
                            DayNames nextDay=(DayNames)lastDayName;
                            string[] formats = { "dd.MM.", "d.MM.", "d.M.", "dd.M." };
                            for (int i = week.Count + 1; i <= 7; i++)
                            {
                    <li class="events-group disabled">
                        <div class="top-info">
                            @{
                                if (lastDayName < 6)
                                {
                                    nextDay = (DayNames)(++lastDayName);
                                }
                                else if (lastDayName == 6)
                                {
                                    lastDayName = -1;
                                    nextDay = (DayNames)(++lastDayName);
                                }
                                else if (lastDayName < 6)
                                {
                                    nextDay = (DayNames)(--lastDayName);
                                }
                                DateTime nextDate = DateTime.MinValue;
                                if (DateTime.TryParseExact(lastDayDate, formats, CultureInfo.InvariantCulture, DateTimeStyles.None, out nextDate))
                                {
                                    nextDate = nextDate.AddDays(1);
                                    <span>@ViewHelper.TranslateDayNames(nextDay) @nextDate.ToString("dd.MM")</span>
                                }
                                else
                                {
                                    <span>@ViewHelper.TranslateDayNames(nextDay)</span>

                                }
                                lastDayDate = nextDate.ToString("dd.MM.");
                            }
                        </div>

                        <ul class=" disabled disabled-boxes">
                            <li class="single-event">
                                <em class="event-name">
                                    X
                                </em>
</ul>
                    </li>
                    }
                    }
                </ul>
            </div>
        </div>
                                }


</div>

@section Styles{

    @*<link href="~/Content/Calendar-reset.css" rel="stylesheet" />*@
}