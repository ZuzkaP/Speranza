@model Speranza.Models.RecurringModel
@using Speranza.Views

@{
    ViewBag.Title = "Nastavenie opakujúcich sa tréningov";
    Layout = "~/Views/Layout.cshtml";
    string[] days = { "Pondelok", "Utorok", "Streda", "Štvrtok", "Piatok", "Sobota", "Nedeľa" };
}

<div class="container">
    <h2>Nastavenie opakujúcich sa tréningov</h2>

    <div id="messageBoxSuccess" style="display:none;" class="alert alert-success" role="alert"></div>
    @if (Model != null)
    {
        <p> @Html.Raw(ViewHelper.ShowMessageInView(Model.Message))</p>
    }

    <form class="form-horizontal" method="post" action="@Url.Action("CreateRecurring")">
        <div class="col-sm-9">
            <div class="form-group">
                @Html.LabelFor(m => m.Trainer, "Tréner", new { @class = "control-label col-sm-2" })
                <div class="col-sm-3">
                    @Html.TextBoxFor(m => m.Trainer, new { @class = "form-control" })
                </div>
            </div>

            @*Training Description*@
            <div class="form-group">
                @Html.LabelFor(m => m.Description, "Popis", new { @class = "control-label col-sm-2" })
                <div class="col-sm-3">
                    @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                </div>

            </div>

            @*Training Capacity*@
            <div class="form-group">
                @Html.LabelFor(m => m.Capacity, "Kapacita", new { @class = "control-label col-sm-2" })
                <div class="col-sm-3">
                    @Html.TextBoxFor(m => m.Capacity, new { @class = "form-control", type = "number", min = "1", @Value = 10 })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ValidFrom, "Platný od", new { @class = "control-label col-sm-2" })
                <div class="col-sm-3">
                    <input type="text" class="form-control" id="GenerationDate" name="ValidFrom" data-role="date" data-inline="true"/>
                </div>
                <input type="submit" value="Pridaj" class="btn btn-primary" />
            </div>
        </div>


        <table class="table table-bordered">
            <thead>
                <tr>
                    <th></th>
                    @for (int i = 7; i < 20; i++)
            {
                        <th>@i.ToString("00"):00</th>
                    }
                </tr>
            </thead>

            @for (int j = 0; j <= 6; j++)
            {
                <tr>
                    <td class="warning">@days[j]</td>
                    @for (int i = 7; i < 20; i++)
                    {
                        <td class="text-center">
                            @*<div class="btn-group" data-toggle="buttons">
                                <label class="btn btn-primary">*@

                            @if (Model.IsTrainingInTime[j * 13 + i - 7])
                            {
                                var template = Model.Templates.First(r => r.Day == j && r.Time == i);
                                @Html.CheckBoxFor(r => r.IsTrainingInTime[j * 13 + i - 7], new { @class = "hidden" })
                                <div id="TemplateData-@(j * 13 + i - 7)">
                                    <a href="#" class="RemoveTemplate" data-time="@i" data-day="@j"><span class="glyphicon glyphicon-remove text-danger"></span></a>
                                    <br />
                                    @template.Description
                                    <br />
                                    @template.Trainer
                                    <br />
                                    @template.Capacity
                                    @if (template.ValidFrom != DateTime.MinValue)
                                    {
                                        <br />
                                        @: Od
                                        @template.ValidFrom.ToString("dd.MM.yyyy");
                                    }
                                </div>
                            }
                                    else
                                    {
                                @Html.CheckBoxFor(r => r.IsTrainingInTime[j * 13 + i - 7])
                            }
                            @*<span class="glyphicon glyphicon-ok"></span>*@
                            @*</label>*@
                            @*</div>*@
                        </td>
                    }
                </tr>
            }



        </table>
    </form>
</div>


@section scripts
    {
    <script>
        $(".SetupTraining").click(function () {
            var self = $(this);
            var dayName = self.data('day-name');
            var time = self.data('hour');

            $("#modalHeader").html(dayName + " " + time + ":00");
            $("#SetupTrainingModal").modal("show");
        })

        $(".RemoveTemplate").click(function () {
            var self = $(this);
            var day = self.data('day');
            var time = self.data('time');
            var dayNames = ["pondelok", "utorok", "stredu", "štvrtok", "piatok", "sobotu", "nedeľu"];
            $.ajax({
                url: "RemoveTemplate",
                data: { day: day, time: time },
                type: 'POST',
                dataType: "json",
                success: function (response) {
                    $("#TemplateData-" + (day * 13 + time - 7)).remove();
                    $("#IsTrainingInTime_" + (day * 13 + time - 7) + "_").removeClass("hidden");
                    $("#IsTrainingInTime_" + (day * 13 + time - 7) + "_").prop("checked", false);
                    $('#MessageBoxCreating').hide();
                    $('#messageBoxSuccess').html("Tréning opakujúci sa v  " + dayNames[day] + " o " + time + ":00 bol zrušený.");
                    $('#messageBoxSuccess').show();
                }
            });
        })

        $(function () {
            $('#GenerationDate').datepicker({
                dateFormat: 'dd.mm.yy',
                monthNames: ["Január", "Február", "Marec", "Apríl", "Máj", "Jún", "Júl", "August", "September", "Október", "November", "December"],
                monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "Máj", "Jún", "Júl", "Aug", "Sep", "Okt", "Nov", "Dec"],
                dayNames: ["Nedeľa", "Pondelok", "Utorok", "Streda", "Štvrtok", "Piatok", "Sobota"],
                dayNamesMin: ["Ne", "Po", "Ut", "St", "Št", "Pi", "So"],
                firstDay: 1,
                minDate: 0,
                constrainInput: true
            }).datepicker("setDate", new Date());
        });

    </script>
}
