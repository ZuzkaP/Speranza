@model Speranza.Models.RecurringModel
@using Speranza.Views

@{
    ViewBag.Title = "Nastavenie opakujúcich sa tréningov";
    Layout = "~/Views/Layout.cshtml";
    string[] days = { "Pondelok", "Utorok", "Streda", "Štvrtok", "Piatok", "Sobota", "Nedeľa" };
}

<div class="container calendar-container">
    <h2 class="userProfileLabel">Nastavenie opakujúcich sa tréningov</h2>

    <div id="messageBoxSuccess" style="display:none;" class="alert alert-success" role="alert"></div>
    @if (Model != null)
    {
        <p> @Html.Raw(ViewHelper.ShowMessageInView(Model.Message))</p>
    }

    <form class="myForm" method="post" action="@Url.Action("CreateRecurring")">
        <div class="container">
            <div class="row">
                @*Trainer*@
                <div class="form-group col-lg-4 col-sm-12">
                    @Html.LabelFor(m => m.Trainer, "Tréner", new { @class = "col-12" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text octicon octicon-jersey octicon-newTraining"></span>
                        </div>
                        @Html.TextBoxFor(m => m.Trainer, new { @class = "form-control col-12" })
                    </div>
                </div>

                <div class="form-group  col-lg-4 col-sm-12">
                    @Html.LabelFor(m => m.ValidFrom, "Platný od", new { @class = "col-12" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text octicon octicon-arrow-right octicon-newTraining"></span>
                        </div>
                        <input type="text" class="form-control col-12" id="GenerationDate" name="ValidFrom" data-role="date" data-inline="true" />
                    </div>
                </div>

                @*Training Capacity*@
                <div class="form-group col-lg-4 col-sm-12">
                    @Html.LabelFor(m => m.Capacity, "Kapacita", new { @class = "col-12" })
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text octicon octicon-organization octicon-newTraining"></span>
                        </div>
                        @Html.TextBoxFor(m => m.Capacity, new { @class = "form-control col-12", type = "number", min = "1", @Value = 10 })
                    </div>
                </div>

            </div>

            <div class="row">
                @*Training Description*@
                <div class="form-group col-lg-6 offset-lg-3 col-sm-12">
                    @Html.LabelFor(m => m.Description, "Popis", new { @class = "col-12" })
                    @Html.TextAreaFor(m => m.Description, new { @class = "form-control col-12" })
                </div>
            </div>
            <div class="row">
                <div class="col-lg-2 offset-lg-5 col-sm-2">
                    <button type="submit" class="btn btn-primary col-lg-12">Pridaj</button>
                </div>
            </div>
        </div>

        @* <div class="table-responsive">*@
        @*<table class="table table-bordered">
            <thead>
            <tr>
                <th></th>
                @for (int i = 7; i < 20; i++)
                {
                    <th>@i.ToString("00"):00</th>
                }
            </tr>
            </thead>*@

        <div class="cd-schedule loading recurring">
            <div class="timeline">
                <ul>
                    @for (int i = 6; i < 21; i++)
                    {
                        <li><span>@i.ToString("00"):00</span></li>
                    }
                </ul>
            </div> <!-- .timeline -->

            <div class="events">
                <ul>
                    @for (int j = 0; j <= 6; j++)
                    {
                        <li class="events-group">
                            <div class="top-info">
                                <span>@days[j]</span>
                            </div>
                            <ul id="myList">
                                @for (int i = 6; i < 21; i++)
                                {
                                    if (!Model.IsTrainingInTime[j * 15 + i - 6])
                                    {
                                        <li class="single-event withNoTraining" id="liID-@(j * 15 + i - 6)" data-start="@TimeSpan.FromHours(i).ToString()" data-end="@TimeSpan.FromHours(i+1).ToString()">
                                            <span>
                                                <span class="d-lg-none">@TimeSpan.FromHours(i).ToString("hh':'mm")</span>
                                                <label class="custom-control custom-checkbox recurring-checkbox">
                                                    @Html.CheckBoxFor(r => r.IsTrainingInTime[j * 15 + i - 6], new { @class = "custom-control-input" })
                                                    <span class="custom-control-indicator"></span>
                                                </label>
                                            </span>
                                        </li>
                                    }
                                    else
                                    {
                                        var dayTimeTemplate = @Model.Templates.First(r => r.Day == j && r.Time == i);
                                        <li class="single-event withTraining" data-animation="false" data-trigger="click" data-toggle="popover" title="@dayTimeTemplate.Trainer" data-content="@dayTimeTemplate.Description" data-start="@TimeSpan.FromHours(i).ToString(@"hh\:mm")" data-end="@TimeSpan.FromHours(i+1).ToString(@"hh\:mm")">
                                            @Html.CheckBoxFor(r => r.IsTrainingInTime[j * 15 + i - 6], new { @class = "custom-control-input hidden" })
                                            <em class="event-name">
                                                <span class="octicon octicon-heart text-danger" style="font-size:120%"></span>
                                                <span class="event-capacity" style="font-size:120%">@dayTimeTemplate.Capacity</span>
                                            </em>
                                            <span class="small" style="padding-left: 5px">Od: @dayTimeTemplate.ValidFrom.Date.ToString("dd.MM.yy")</span>
                                            <a href="#" class="RemoveTemplate" data-time="@i" data-day="@j"><span class="octicon octicon-x text-primary"></span></a>
                                        </li>

                                    }
                                }
                            </ul>
                        </li>

                    }
                </ul>
            </div>
        </div>
    </form>
</div>


@section scripts
    {
    <script>
        var isshown = false;
        var clickedAway = false;

        $(function () {
            $('[data-toggle="popover"]').popover();
        });

        $('body').on('click', function (e) {
            {
                if (isshown && clickedAway) {
                    $('[data-toggle="popover"]').popover('hide');
                    isshown = false;
                    clickedAway = false;
                } else {
                    clickedAway = true;
                }
            }
        });

        $('body').on('shown.bs.popover', function () {
            isshown = true;
            clickedAway = false;
        });


        $(".SetupTraining").click(function () {
            var self = $(this);
            var dayName = self.data('day-name');
            var time = self.data('hour');

            $("#modalHeader").html(dayName + " " + time + ":00");
            $("#SetupTrainingModal").modal("show");
        });

        $(".RemoveTemplate").click(function () {
            var self = $(this);
            var day = self.data('day');
            var time = self.data('time');
            var dayNames = ["pondelok", "utorok", "stredu", "štvrtok", "piatok", "sobotu", "nedeľu"];
            $.ajax({
                url: "RemoveTemplate",
                data: { day: day, time: time },
                type: 'POST',
                dataType: "json",
                success: function (response) {
                    //  var item = document.getElementById("#liID-" + (day * 15 + time - 6));
                    $("#liID-" + (day * 15 + time - 6)).remove();
                    item.parentNode.removeChild(item);
                    //$(".withNoTraining #liID-" + (day * 15 + time - 6)).insertAfter('#liID' + (day * 15 + time - 6 - 1));
                    var list = document.getElementById("myList");
                    list.appendChild(".withNoTraining #liID-" + (day * 15 + time - 6));
                    $("#IsTrainingInTime_" + (day * 15 + time - 6) + "_").removeClass("hidden");
                    $("#IsTrainingInTime_" + (day * 15 + time - 6) + "_").prop("checked", false);
                    self.parent().parent().data('event', 'event-2');
                    $('#MessageBoxCreating').hide();
                    $('#messageBoxSuccess').html("Tréning opakujúci sa v  " + dayNames[day] + " o " + time + ":00 bude zrušený, ak na ňom nie je nikto prihlásený!");
                    $('#messageBoxSuccess').show();
                }
            });
        });

        $(function () {
            $('#GenerationDate').datepicker({
                dateFormat: 'dd.mm.yy',
                monthNames: ["Január", "Február", "Marec", "Apríl", "Máj", "Jún", "Júl", "August", "September", "Október", "November", "December"],
                monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "Máj", "Jún", "Júl", "Aug", "Sep", "Okt", "Nov", "Dec"],
                dayNames: ["Nedeľa", "Pondelok", "Utorok", "Streda", "Štvrtok", "Piatok", "Sobota"],
                dayNamesMin: ["Ne", "Po", "Ut", "St", "Št", "Pi", "So"],
                firstDay: 1,
                minDate: 0,
                constrainInput: true
            }).datepicker("setDate", new Date());
        });

    </script>
}
